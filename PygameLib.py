import pygame

#--------------------Constant----------------------------
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GRAY = (125, 125, 125)
LIGHT_BLUE = (64, 128, 255)
GREEN = (0, 200, 64)
YELLOW = (225, 225, 0)
PINK = (230, 50, 230)
#--------------------Constant----------------------------

pygame.display.set_mode((size, size)) #Вывод главного графического окна
set_mode #функция принимает размер в виде кортежа или списка из двух целых чисел, флаги, глубину цвета
#Флаги нужны для переключения на аппаратное ускорение, ПОЛНОЭКРАННЫЙ РЕЖИМ, ОТКЛЮЧЕНИЯ РАМКИ ОКНА
#Сетмод - это функция, которая возваращет объект SURFACE(поверхность). Возвращает главную поверхность.

pygame.display.update()#Обновление экрана. Без аргументов обновляет значения всей поверхности окна.
pygame.display.flip()#Родственная апдейту. По иному обновляет, но использовать только в случае присутствия флагов

pygame.RESIZABLE #после сетмода делает окно изменяемой размерами

pygame.event.get() #модуль event c функцией гет, которая забирает список событий из очереди. Гет возвращает список,
#события удаляются из очереди, а в очередь продолжают записываться события

pygame.time.delay() #Задержка, чтобы не расходовать ресурс компьютера. Можно создать объект часов и установить ему
#частоту кадров. ======>
clock=pygame.time.Clock()
clock.tick() #количество кадров. Вставить в цикл


#каркас программы
#____________________________________________________________________________________
# здесь подключаются модули
import pygame
import sys
# здесь определяются константы,
# классы и функции
FPS = 60
# здесь происходит инициация,
# создание объектов
pygame.init()
pygame.display.set_mode((600, 400))
clock = pygame.time.Clock()
# если надо до цикла отобразить
# какие-то объекты, обновляем экран
pygame.display.update()
# главный цикл
while True:
# задержка
clock.tick(FPS)
# цикл обработки событий
for i in pygame.event.get():
if i.type == pygame.QUIT:
sys.exit()
# --------
# изменение объектов
# --------
# обновление экрана
pygame.display.update()
#____________________________________________________________________________________
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
import pygame
import sys

FPS=60

pygame.init()
pygame.display.set_mode((600, 400))
clock = pygame.time.Clock()

pygame.display.update()

clock.tick(FPS)

for i in pygame.event.get():
    if i.type == pygame.QUIT:
        sys.exit()


pygame.display.update()
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


pygame.draw.rect(screen, (255,255,255),
                                (20,20,100,75), 5) #Рисовка прямоугольника


pygame.draw.line(screen, (0,0,0), [10,30], [290,15],10) #Рисовка обычной линии

pygame.draw.aaline(screen, (0,0,0), [10,30], [290,15],10)#Рисовка сглаженной линии

pygame.draw.aalines(screen, (0,0,0),True,[[10,100], [140,170],[280,110]])  #Координаты определяют места излома. Количество точек
# может быть произвольным. Третий параметр (True или False) указывает замыкать ли крайние точки.

pygame.draw.aalines(screen, (0,0,0), [10,30], [290,15],10)

pygame.draw.polygon(sc, WHITE,
[[150, 10], [180, 50],
[90, 90], [30, 30]])

pygame.draw.circle(sc, YELLOW, (100, 100), 50)

pygame.draw.ellipse(sc, GREEN, (10, 50, 280, 100))

pi = 3.14
pygame.draw.arc(sc, WHITE,
(10, 50, 280, 100), 0, pi)
pygame.draw.arc(sc, PINK,
(50, 30, 200, 150), pi, 2*pi, 3)

